<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.glassfish"
		module="json"
		revision="1.0"
		status="release"
		publication="20130425051622"
	>
		<license name="
                Dual license consisting of the CDDL v1.1 and GPL v2
            " url="https://glassfish.java.net/public/CDDL+GPL_1_1.html" />
		<description homepage="http://jsonp.java.net">
		JSR 353:Java API for Processing JSON RI
		</description>
		<m:dependency.management__junit__junit__version>3.8.1</m:dependency.management__junit__junit__version>
		<m:properties__packages.private>org.glassfish.*</m:properties__packages.private>
		<m:dependency.management__javax.json__javax.json-api__version>1.0</m:dependency.management__javax.json__javax.json-api__version>
		<m:dependency.management__javax.ws.rs__javax.ws.rs-api__version>2.0</m:dependency.management__javax.ws.rs__javax.ws.rs-api__version>
		<m:properties__impl_version>1.0</m:properties__impl_version>
		<m:properties__impl_namespace>org.glassfish</m:properties__impl_namespace>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__spec_impl_version>1.0</m:properties__spec_impl_version>
		<m:properties__spec_version>1.0</m:properties__spec_version>
		<m:properties__api_package>javax.json</m:properties__api_package>
		<m:dependency.management__org.glassfish__javax.json__version>1.0</m:dependency.management__org.glassfish__javax.json__version>
		<m:properties__packages.export>javax.json.*</m:properties__packages.export>
		<m:dependency.management__javax__javaee-web-api__version>6.0</m:dependency.management__javax__javaee-web-api__version>
		<m:properties__jvnetDistMgmtSnapshotsUrl>https://maven.java.net/content/repositories/snapshots/</m:properties__jvnetDistMgmtSnapshotsUrl>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-compiler-plugin__null|org.apache.maven.plugins__maven-source-plugin__null|org.glassfish.copyright__glassfish-copyright-maven-plugin__1.29|org.apache.maven.plugins__maven-release-plugin__2.3.2</m:maven.plugins>
		<m:dependency.management__javax.ws.rs__javax.ws.rs-api__scope>provided</m:dependency.management__javax.ws.rs__javax.ws.rs-api__scope>
		<m:dependency.management__junit__junit__scope>test</m:dependency.management__junit__junit__scope>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
	</publications>
</ivy-module>
